export const response = {
    "success": true,
    "message": "Marketplace for vehicles and real estate created successfully with React + Vite + Tailwind. To run it:\n1) npm install\n2) npm run dev\nThen open http://localhost:5173. Use the tabs to switch categories, search and filter by price, sort results, click a card to view details in a modal. You can customize mock data in src/data.ts and types in src/types.ts.",
    "prompts": [
        {
            "type": "file",
            "name": "package.json",
            "language": "json",
            "path": "package.json",
            "code": "{\n  \"name\": \"marketplace\",\n  \"private\": true,\n  \"version\": \"0.0.1\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"lucide-react\": \"^0.446.0\"\n  },\n  \"devDependencies\": {\n    \"@vitejs/plugin-react\": \"^4.3.0\",\n    \"autoprefixer\": \"^10.4.0\",\n    \"postcss\": \"^8.4.0\",\n    \"tailwindcss\": \"^3.4.0\",\n    \"typescript\": \"^5.5.0\",\n    \"vite\": \"^5.4.0\"\n  }\n}"
        },
        {
            "type": "file",
            "name": "vite.config.ts",
            "language": "typescript",
            "path": "vite.config.ts",
            "code": "import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\n\nexport default defineConfig({\n  plugins: [react()],\n});\n"
        },
        {
            "type": "file",
            "name": "tsconfig.json",
            "language": "json",
            "path": "tsconfig.json",
            "code": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"useDefineForClassFields\": true,\n    \"lib\": [\"ES2020\", \"DOM\", \"DOM.Iterable\"],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true\n  },\n  \"include\": [\"src\"],\n  \"references\": [{ \"path\": \"./tsconfig.node.json\" }]\n}"
        },
        {
            "type": "file",
            "name": "tsconfig.node.json",
            "language": "json",
            "path": "tsconfig.node.json",
            "code": "{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"skipLibCheck\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"bundler\",\n    \"allowSyntheticDefaultImports\": true\n  },\n  \"include\": [\"vite.config.ts\"]\n}"
        },
        {
            "type": "file",
            "name": "tailwind.config.js",
            "language": "javascript",
            "path": "tailwind.config.js",
            "code": "export default {\n  content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n"
        },
        {
            "type": "file",
            "name": "postcss.config.js",
            "language": "javascript",
            "path": "postcss.config.js",
            "code": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n};\n"
        },
        {
            "type": "folder",
            "name": "src",
            "children": [
                {
                    "type": "file",
                    "name": "index.css",
                    "language": "css",
                    "path": "src/index.css",
                    "code": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* App base styles */\n:root {\n  --bg: 255 255 255;\n}\n\nhtml, body, #root {\n  height: 100%;\n}\n\nbody {\n  background-color: rgb(var(--bg));\n}\n"
                },
                {
                    "type": "file",
                    "name": "main.tsx",
                    "language": "typescript",
                    "path": "src/main.tsx",
                    "code": "import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root') as HTMLElement).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"
                },
                {
                    "type": "file",
                    "name": "types.ts",
                    "language": "typescript",
                    "path": "src/types.ts",
                    "code": "export type Category = 'vehicles' | 'estates';\n\nexport interface BaseListing {\n  id: string;\n  category: Category;\n  title: string;\n  price: number;\n  images: string[];\n  location: string;\n  createdAt: number; // epoch ms\n  description: string;\n}\n\nexport interface VehicleListing extends BaseListing {\n  category: 'vehicles';\n  details: {\n    make: string;\n    model: string;\n    year: number;\n    mileage: number; // in km\n    fuel: 'petrol' | 'diesel' | 'electric' | 'hybrid';\n    transmission: 'manual' | 'automatic';\n    condition: 'new' | 'used';\n  };\n}\n\nexport interface EstateListing extends BaseListing {\n  category: 'estates';\n  details: {\n    propertyType: 'apartment' | 'house' | 'land' | 'office';\n    bedrooms: number;\n    bathrooms: number;\n    area: number; // in sqm\n  };\n}\n\nexport type Listing = VehicleListing | EstateListing;\n\nexport const isVehicle = (l: Listing): l is VehicleListing => l.category === 'vehicles';\nexport const isEstate = (l: Listing): l is EstateListing => l.category === 'estates';\n"
                },
                {
                    "type": "file",
                    "name": "data.ts",
                    "language": "typescript",
                    "path": "src/data.ts",
                    "code": "import { Listing, VehicleListing, EstateListing } from './types';\n\nconst now = Date.now();\n\nconst vehicles: VehicleListing[] = [\n  {\n    id: 'v-1',\n    category: 'vehicles',\n    title: '2019 Toyota Corolla SE',\n    price: 15990,\n    images: [\n      'https://images.unsplash.com/photo-1525609004556-c46c7d6cf023?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Austin, TX',\n    createdAt: now - 1000 * 60 * 60 * 24 * 2,\n    description: 'Reliable compact sedan with great fuel economy and low maintenance cost.',\n    details: {\n      make: 'Toyota',\n      model: 'Corolla',\n      year: 2019,\n      mileage: 42000,\n      fuel: 'petrol',\n      transmission: 'automatic',\n      condition: 'used',\n    },\n  },\n  {\n    id: 'v-2',\n    category: 'vehicles',\n    title: '2021 Tesla Model 3 Long Range',\n    price: 34990,\n    images: [\n      'https://images.unsplash.com/photo-1549924231-f129b911e442?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'San Jose, CA',\n    createdAt: now - 1000 * 60 * 60 * 8,\n    description: 'All-electric sedan with Autopilot, excellent range, and premium features.',\n    details: {\n      make: 'Tesla',\n      model: 'Model 3',\n      year: 2021,\n      mileage: 18000,\n      fuel: 'electric',\n      transmission: 'automatic',\n      condition: 'used',\n    },\n  },\n  {\n    id: 'v-3',\n    category: 'vehicles',\n    title: '2018 Honda Civic LX',\n    price: 13950,\n    images: [\n      'https://images.unsplash.com/photo-1519638399535-1b036603ac77?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Denver, CO',\n    createdAt: now - 1000 * 60 * 60 * 24 * 5,\n    description: 'Popular compact car known for reliability, comfort, and efficiency.',\n    details: {\n      make: 'Honda',\n      model: 'Civic',\n      year: 2018,\n      mileage: 56000,\n      fuel: 'petrol',\n      transmission: 'manual',\n      condition: 'used',\n    },\n  },\n  {\n    id: 'v-4',\n    category: 'vehicles',\n    title: '2020 Ford F-150 XLT 4x4',\n    price: 32900,\n    images: [\n      'https://images.unsplash.com/photo-1503376780353-7e6692767b70?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Nashville, TN',\n    createdAt: now - 1000 * 60 * 60 * 24 * 1,\n    description: 'Powerful pickup with towing package, crew cab, and 4WD capability.',\n    details: {\n      make: 'Ford',\n      model: 'F-150',\n      year: 2020,\n      mileage: 35000,\n      fuel: 'petrol',\n      transmission: 'automatic',\n      condition: 'used',\n    },\n  },\n  {\n    id: 'v-5',\n    category: 'vehicles',\n    title: '2022 BMW 3 Series 330i',\n    price: 41900,\n    images: [\n      'https://images.unsplash.com/photo-1619767886558-efdc259cde1f?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Miami, FL',\n    createdAt: now - 1000 * 60 * 60 * 12,\n    description: 'Luxury sport sedan with dynamic handling and premium interior.',\n    details: {\n      make: 'BMW',\n      model: '330i',\n      year: 2022,\n      mileage: 12000,\n      fuel: 'petrol',\n      transmission: 'automatic',\n      condition: 'used',\n    },\n  },\n  {\n    id: 'v-6',\n    category: 'vehicles',\n    title: '2017 Toyota Prius Hybrid',\n    price: 16900,\n    images: [\n      'https://images.unsplash.com/photo-1583121274602-3e2820c69888?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Portland, OR',\n    createdAt: now - 1000 * 60 * 60 * 36,\n    description: 'Hybrid hatchback with outstanding fuel efficiency and reliability.',\n    details: {\n      make: 'Toyota',\n      model: 'Prius',\n      year: 2017,\n      mileage: 72000,\n      fuel: 'hybrid',\n      transmission: 'automatic',\n      condition: 'used',\n    },\n  },\n];\n\nconst estates: EstateListing[] = [\n  {\n    id: 'e-1',\n    category: 'estates',\n    title: 'Modern 2BR Apartment Downtown',\n    price: 295000,\n    images: [\n      'https://images.unsplash.com/photo-1502005229762-cf1b2da7c68e?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Seattle, WA',\n    createdAt: now - 1000 * 60 * 60 * 18,\n    description: 'Bright corner unit with floor-to-ceiling windows and city views.',\n    details: {\n      propertyType: 'apartment',\n      bedrooms: 2,\n      bathrooms: 2,\n      area: 92,\n    },\n  },\n  {\n    id: 'e-2',\n    category: 'estates',\n    title: 'Spacious 4BR Family House',\n    price: 489000,\n    images: [\n      'https://images.unsplash.com/photo-1564013799919-ab600027ffc6?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Raleigh, NC',\n    createdAt: now - 1000 * 60 * 60 * 72,\n    description: 'Quiet suburban neighborhood, large backyard, recently renovated kitchen.',\n    details: {\n      propertyType: 'house',\n      bedrooms: 4,\n      bathrooms: 3,\n      area: 210,\n    },\n  },\n  {\n    id: 'e-3',\n    category: 'estates',\n    title: 'Cozy 1BR Starter Apartment',\n    price: 189000,\n    images: [\n      'https://images.unsplash.com/photo-1505691723518-36a5ac3b2d52?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Cleveland, OH',\n    createdAt: now - 1000 * 60 * 60 * 10,\n    description: 'Affordable unit near public transit, perfect for first-time buyers.',\n    details: {\n      propertyType: 'apartment',\n      bedrooms: 1,\n      bathrooms: 1,\n      area: 55,\n    },\n  },\n  {\n    id: 'e-4',\n    category: 'estates',\n    title: 'Downtown Office Space - 5th Floor',\n    price: 650000,\n    images: [\n      'https://images.unsplash.com/photo-1507208773393-40d9fc670acf?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Chicago, IL',\n    createdAt: now - 1000 * 60 * 60 * 6,\n    description: 'Open-plan office with meeting rooms, high ceilings, and natural light.',\n    details: {\n      propertyType: 'office',\n      bedrooms: 0,\n      bathrooms: 2,\n      area: 320,\n    },\n  },\n  {\n    id: 'e-5',\n    category: 'estates',\n    title: 'Beachside 3BR House',\n    price: 799000,\n    images: [\n      'https://images.unsplash.com/photo-1507089947368-19c1da9775ae?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Santa Barbara, CA',\n    createdAt: now - 1000 * 60 * 60 * 30,\n    description: 'Stunning ocean views, modern finishes, and private access to the beach.',\n    details: {\n      propertyType: 'house',\n      bedrooms: 3,\n      bathrooms: 2,\n      area: 185,\n    },\n  },\n  {\n    id: 'e-6',\n    category: 'estates',\n    title: 'Residential Land Plot (Corner Lot)',\n    price: 120000,\n    images: [\n      'https://images.unsplash.com/photo-1512813382947-5a3c87e23581?q=80&w=1600&auto=format&fit=crop',\n    ],\n    location: 'Boise, ID',\n    createdAt: now - 1000 * 60 * 60 * 55,\n    description: 'Prime corner lot in growing neighborhood. Utilities nearby.',\n    details: {\n      propertyType: 'land',\n      bedrooms: 0,\n      bathrooms: 0,\n      area: 650,\n    },\n  },\n];\n\nexport const LISTINGS: Listing[] = [...vehicles, ...estates];\n"
                },
                {
                    "type": "folder",
                    "name": "utils",
                    "children": [
                        {
                            "type": "file",
                            "name": "format.ts",
                            "language": "typescript",
                            "path": "src/utils/format.ts",
                            "code": "export const formatPrice = (price: number, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', { style: 'currency', currency, maximumFractionDigits: 0 }).format(price);\n};\n\nexport const timeAgo = (timestamp: number) => {\n  const diff = Date.now() - timestamp;\n  const sec = Math.floor(diff / 1000);\n  const min = Math.floor(sec / 60);\n  const hr = Math.floor(min / 60);\n  const day = Math.floor(hr / 24);\n  if (day > 0) return `${day}d ago`;\n  if (hr > 0) return `${hr}h ago`;\n  if (min > 0) return `${min}m ago`;\n  return 'Just now';\n};\n"
                        }
                    ]
                },
                {
                    "type": "folder",
                    "name": "components",
                    "children": [
                        {
                            "type": "file",
                            "name": "CategoryTabs.tsx",
                            "language": "typescript",
                            "path": "src/components/CategoryTabs.tsx",
                            "code": "import { Category } from '../types';\n\ninterface CategoryTabsProps {\n  selected: Category;\n  onChange: (c: Category) => void;\n}\n\nexport default function CategoryTabs({ selected, onChange }: CategoryTabsProps) {\n  const tabs: { key: Category; label: string }[] = [\n    { key: 'vehicles', label: 'Vehicles' },\n    { key: 'estates', label: 'Real Estate' },\n  ];\n\n  return (\n    <div className=\"inline-flex rounded-xl bg-gray-100 p-1\">\n      {tabs.map((t) => {\n        const active = selected === t.key;\n        return (\n          <button\n            key={t.key}\n            onClick={() => onChange(t.key)}\n            className={\n              'px-4 py-2 rounded-lg text-sm font-medium transition ' +\n              (active\n                ? 'bg-white shadow text-gray-900'\n                : 'text-gray-600 hover:text-gray-900')\n            }\n            aria-pressed={active}\n          >\n            {t.label}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n"
                        },
                        {
                            "type": "file",
                            "name": "Filters.tsx",
                            "language": "typescript",
                            "path": "src/components/Filters.tsx",
                            "code": "import { Search, SlidersHorizontal, X } from 'lucide-react';\nimport { useId } from 'react';\n\nexport type SortKey = 'recent' | 'price_asc' | 'price_desc';\n\ninterface FiltersProps {\n  search: string;\n  minPrice: string;\n  maxPrice: string;\n  sort: SortKey;\n  onSearchChange: (v: string) => void;\n  onMinPriceChange: (v: string) => void;\n  onMaxPriceChange: (v: string) => void;\n  onSortChange: (v: SortKey) => void;\n  onClear: () => void;\n}\n\nexport default function Filters({\n  search,\n  minPrice,\n  maxPrice,\n  sort,\n  onSearchChange,\n  onMinPriceChange,\n  onMaxPriceChange,\n  onSortChange,\n  onClear,\n}: FiltersProps) {\n  const minId = useId();\n  const maxId = useId();\n  const sortId = useId();\n\n  return (\n    <div className=\"w-full rounded-xl border border-gray-200 bg-white p-4 shadow-sm\">\n      <div className=\"flex flex-col gap-3 md:flex-row md:items-center\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-1/2 h-5 w-5 -translate-y-1/2 text-gray-400\" />\n          <input\n            value={search}\n            onChange={(e) => onSearchChange(e.target.value)}\n            placeholder=\"Search listings (e.g. Tesla, 3BR house)\"\n            className=\"w-full rounded-lg border border-gray-300 pl-10 pr-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\n          />\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          <div className=\"flex items-center gap-2\">\n            <label htmlFor={minId} className=\"text-sm text-gray-600\">Min</label>\n            <input\n              id={minId}\n              inputMode=\"numeric\"\n              value={minPrice}\n              onChange={(e) => onMinPriceChange(e.target.value.replace(/[^0-9]/g, ''))}\n              placeholder=\"0\"\n              className=\"w-24 rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\n            />\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <label htmlFor={maxId} className=\"text-sm text-gray-600\">Max</label>\n            <input\n              id={maxId}\n              inputMode=\"numeric\"\n              value={maxPrice}\n              onChange={(e) => onMaxPriceChange(e.target.value.replace(/[^0-9]/g, ''))}\n              placeholder=\"1000000\"\n              className=\"w-28 rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\n            />\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <SlidersHorizontal className=\"h-4 w-4 text-gray-500\" />\n            <label htmlFor={sortId} className=\"text-sm text-gray-600\">Sort</label>\n            <select\n              id={sortId}\n              value={sort}\n              onChange={(e) => onSortChange(e.target.value as SortKey)}\n              className=\"rounded-lg border border-gray-300 px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:outline-none\"\n            >\n              <option value=\"recent\">Most recent</option>\n              <option value=\"price_asc\">Price: Low to High</option>\n              <option value=\"price_desc\">Price: High to Low</option>\n            </select>\n          </div>\n\n          <button\n            onClick={onClear}\n            className=\"inline-flex items-center gap-1 rounded-lg border border-gray-300 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50\"\n            title=\"Clear filters\"\n          >\n            <X className=\"h-4 w-4\" />\n            Clear\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
                        },
                        {
                            "type": "file",
                            "name": "ListingCard.tsx",
                            "language": "typescript",
                            "path": "src/components/ListingCard.tsx",
                            "code": "import { MapPin } from 'lucide-react';\nimport { Listing } from '../types';\nimport { formatPrice, timeAgo } from '../utils/format';\nimport { isVehicle, isEstate } from '../types';\n\ninterface ListingCardProps {\n  item: Listing;\n  onClick: (l: Listing) => void;\n}\n\nexport default function ListingCard({ item, onClick }: ListingCardProps) {\n  return (\n    <button\n      onClick={() => onClick(item)}\n      className=\"group flex flex-col overflow-hidden rounded-xl border border-gray-200 bg-white text-left shadow-sm transition hover:shadow-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n    >\n      <div className=\"relative aspect-video w-full overflow-hidden bg-gray-100\">\n        <img\n          src={item.images[0]}\n          alt={item.title}\n          className=\"h-full w-full object-cover transition duration-300 group-hover:scale-[1.03]\"\n          loading=\"lazy\"\n        />\n        <span className=\"absolute left-2 top-2 rounded-full bg-black/70 px-2.5 py-1 text-xs font-medium text-white\">\n          {item.category === 'vehicles' ? 'Vehicle' : 'Real Estate'}\n        </span>\n      </div>\n      <div className=\"flex flex-1 flex-col gap-2 p-4\">\n        <div className=\"flex items-start justify-between gap-3\">\n          <h3 className=\"line-clamp-2 text-sm font-semibold text-gray-900\">{item.title}</h3>\n          <div className=\"shrink-0 rounded-md bg-indigo-50 px-2 py-1 text-xs font-semibold text-indigo-700\">\n            {formatPrice(item.price)}\n          </div>\n        </div>\n        <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n          <MapPin className=\"h-4 w-4\" />\n          <span className=\"truncate\">{item.location}</span>\n          <span className=\"mx-1\">•</span>\n          <span>{timeAgo(item.createdAt)}</span>\n        </div>\n        <div className=\"mt-1 text-xs text-gray-600\">\n          {isVehicle(item) && (\n            <div className=\"flex flex-wrap gap-x-3 gap-y-1\">\n              <span>{item.details.year}</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.make} {item.details.model}</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.mileage.toLocaleString()} km</span>\n              <span className=\"text-gray-400\">•</span>\n              <span className=\"capitalize\">{item.details.fuel}</span>\n            </div>\n          )}\n          {isEstate(item) && (\n            <div className=\"flex flex-wrap gap-x-3 gap-y-1\">\n              <span className=\"capitalize\">{item.details.propertyType}</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.bedrooms} bd</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.bathrooms} ba</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.area} m²</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </button>\n  );\n}\n"
                        },
                        {
                            "type": "file",
                            "name": "ListingGrid.tsx",
                            "language": "typescript",
                            "path": "src/components/ListingGrid.tsx",
                            "code": "import { Listing } from '../types';\nimport ListingCard from './ListingCard';\n\ninterface ListingGridProps {\n  items: Listing[];\n  onItemClick: (l: Listing) => void;\n}\n\nexport default function ListingGrid({ items, onItemClick }: ListingGridProps) {\n  if (items.length === 0) {\n    return (\n      <div className=\"rounded-xl border border-dashed border-gray-300 p-12 text-center text-gray-600\">\n        No results match your filters.\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n      {items.map((item) => (\n        <ListingCard key={item.id} item={item} onClick={onItemClick} />\n      ))}\n    </div>\n  );\n}\n"
                        },
                        {
                            "type": "file",
                            "name": "DetailModal.tsx",
                            "language": "typescript",
                            "path": "src/components/DetailModal.tsx",
                            "code": "import { useEffect } from 'react';\nimport { X, MapPin } from 'lucide-react';\nimport { Listing } from '../types';\nimport { formatPrice, timeAgo } from '../utils/format';\nimport { isVehicle, isEstate } from '../types';\n\ninterface DetailModalProps {\n  listing: Listing | null;\n  onClose: () => void;\n}\n\nexport default function DetailModal({ listing, onClose }: DetailModalProps) {\n  useEffect(() => {\n    const onKey = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') onClose();\n    };\n    if (listing) document.addEventListener('keydown', onKey);\n    return () => document.removeEventListener('keydown', onKey);\n  }, [listing, onClose]);\n\n  if (!listing) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      <div className=\"absolute inset-0 bg-black/50\" onClick={onClose} />\n      <div\n        role=\"dialog\"\n        aria-modal=\"true\"\n        className=\"relative z-10 mx-4 w-full max-w-3xl overflow-hidden rounded-2xl bg-white shadow-xl\"\n      >\n        <button\n          onClick={onClose}\n          className=\"absolute right-3 top-3 inline-flex h-9 w-9 items-center justify-center rounded-full bg-white/90 text-gray-700 shadow hover:bg-white\"\n          aria-label=\"Close\"\n        >\n          <X className=\"h-5 w-5\" />\n        </button>\n\n        <div className=\"relative aspect-video w-full bg-gray-100\">\n          <img\n            src={listing.images[0]}\n            alt={listing.title}\n            className=\"h-full w-full object-cover\"\n          />\n        </div>\n\n        <div className=\"grid gap-6 p-6 md:grid-cols-3\">\n          <div className=\"md:col-span-2\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">{listing.title}</h2>\n            <div className=\"mt-1 flex items-center gap-2 text-sm text-gray-500\">\n              <MapPin className=\"h-4 w-4\" />\n              <span>{listing.location}</span>\n              <span className=\"mx-1\">•</span>\n              <span>{timeAgo(listing.createdAt)}</span>\n            </div>\n            <p className=\"mt-4 text-gray-700\">{listing.description}</p>\n\n            {isVehicle(listing) && (\n              <div className=\"mt-6\">\n                <h3 className=\"mb-2 text-sm font-semibold text-gray-900\">Vehicle details</h3>\n                <dl className=\"grid grid-cols-2 gap-x-6 gap-y-2 text-sm text-gray-700 sm:grid-cols-3\">\n                  <div><dt className=\"text-gray-500\">Make</dt><dd className=\"font-medium\">{listing.details.make}</dd></div>\n                  <div><dt className=\"text-gray-500\">Model</dt><dd className=\"font-medium\">{listing.details.model}</dd></div>\n                  <div><dt className=\"text-gray-500\">Year</dt><dd className=\"font-medium\">{listing.details.year}</dd></div>\n                  <div><dt className=\"text-gray-500\">Mileage</dt><dd className=\"font-medium\">{listing.details.mileage.toLocaleString()} km</dd></div>\n                  <div><dt className=\"text-gray-500\">Fuel</dt><dd className=\"font-medium capitalize\">{listing.details.fuel}</dd></div>\n                  <div><dt className=\"text-gray-500\">Transmission</dt><dd className=\"font-medium capitalize\">{listing.details.transmission}</dd></div>\n                  <div><dt className=\"text-gray-500\">Condition</dt><dd className=\"font-medium capitalize\">{listing.details.condition}</dd></div>\n                </dl>\n              </div>\n            )}\n\n            {isEstate(listing) && (\n              <div className=\"mt-6\">\n                <h3 className=\"mb-2 text-sm font-semibold text-gray-900\">Property details</h3>\n                <dl className=\"grid grid-cols-2 gap-x-6 gap-y-2 text-sm text-gray-700 sm:grid-cols-3\">\n                  <div><dt className=\"text-gray-500\">Type</dt><dd className=\"font-medium capitalize\">{listing.details.propertyType}</dd></div>\n                  <div><dt className=\"text-gray-500\">Bedrooms</dt><dd className=\"font-medium\">{listing.details.bedrooms}</dd></div>\n                  <div><dt className=\"text-gray-500\">Bathrooms</dt><dd className=\"font-medium\">{listing.details.bathrooms}</dd></div>\n                  <div><dt className=\"text-gray-500\">Area</dt><dd className=\"font-medium\">{listing.details.area} m²</dd></div>\n                </dl>\n              </div>\n            )}\n          </div>\n\n          <div className=\"md:col-span-1\">\n            <div className=\"rounded-xl border border-gray-200 p-4\">\n              <div className=\"text-2xl font-bold text-indigo-700\">{formatPrice(listing.price)}</div>\n              <p className=\"mt-1 text-sm text-gray-600\">Contact the seller to negotiate price and arrange a viewing or test drive.</p>\n              <div className=\"mt-4 space-y-2\">\n                <a\n                  href=\"#\"\n                  className=\"block w-full rounded-lg bg-indigo-600 px-4 py-2 text-center font-medium text-white hover:bg-indigo-700\"\n                >\n                  Contact seller\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"block w-full rounded-lg border border-gray-300 px-4 py-2 text-center font-medium text-gray-800 hover:bg-gray-50\"\n                >\n                  Save for later\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
                        },
                        {
                            "type": "file",
                            "name": "ListingCard.tsx",
                            "language": "typescript",
                            "path": "src/components/ListingCard.tsx",
                            "code": "import { MapPin } from 'lucide-react';\nimport { Listing } from '../types';\nimport { formatPrice, timeAgo } from '../utils/format';\nimport { isVehicle, isEstate } from '../types';\n\ninterface ListingCardProps {\n  item: Listing;\n  onClick: (l: Listing) => void;\n}\n\nexport default function ListingCard({ item, onClick }: ListingCardProps) {\n  return (\n    <button\n      onClick={() => onClick(item)}\n      className=\"group flex flex-col overflow-hidden rounded-xl border border-gray-200 bg-white text-left shadow-sm transition hover:shadow-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n    >\n      <div className=\"relative aspect-video w-full overflow-hidden bg-gray-100\">\n        <img\n          src={item.images[0]}\n          alt={item.title}\n          className=\"h-full w-full object-cover transition duration-300 group-hover:scale-[1.03]\"\n          loading=\"lazy\"\n        />\n        <span className=\"absolute left-2 top-2 rounded-full bg-black/70 px-2.5 py-1 text-xs font-medium text-white\">\n          {item.category === 'vehicles' ? 'Vehicle' : 'Real Estate'}\n        </span>\n      </div>\n      <div className=\"flex flex-1 flex-col gap-2 p-4\">\n        <div className=\"flex items-start justify-between gap-3\">\n          <h3 className=\"truncate text-sm font-semibold text-gray-900\">{item.title}</h3>\n          <div className=\"shrink-0 rounded-md bg-indigo-50 px-2 py-1 text-xs font-semibold text-indigo-700\">\n            {formatPrice(item.price)}\n          </div>\n        </div>\n        <div className=\"flex items-center gap-1 text-xs text-gray-500\">\n          <MapPin className=\"h-4 w-4\" />\n          <span className=\"truncate\">{item.location}</span>\n          <span className=\"mx-1\">•</span>\n          <span>{timeAgo(item.createdAt)}</span>\n        </div>\n        <div className=\"mt-1 text-xs text-gray-600\">\n          {isVehicle(item) && (\n            <div className=\"flex flex-wrap gap-x-3 gap-y-1\">\n              <span>{item.details.year}</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.make} {item.details.model}</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.mileage.toLocaleString()} km</span>\n              <span className=\"text-gray-400\">•</span>\n              <span className=\"capitalize\">{item.details.fuel}</span>\n            </div>\n          )}\n          {isEstate(item) && (\n            <div className=\"flex flex-wrap gap-x-3 gap-y-1\">\n              <span className=\"capitalize\">{item.details.propertyType}</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.bedrooms} bd</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.bathrooms} ba</span>\n              <span className=\"text-gray-400\">•</span>\n              <span>{item.details.area} m²</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </button>\n  );\n}\n"
                        }
                    ]
                },
                {
                    "type": "file",
                    "name": "App.tsx",
                    "language": "typescript",
                    "path": "src/App.tsx",
                    "code": "import { useMemo, useState } from 'react';\nimport CategoryTabs from './components/CategoryTabs';\nimport Filters, { SortKey } from './components/Filters';\nimport ListingGrid from './components/ListingGrid';\nimport DetailModal from './components/DetailModal';\nimport { Category, Listing, isEstate, isVehicle } from './types';\nimport { LISTINGS } from './data';\n\nfunction applySearch(listing: Listing, q: string) {\n  if (!q) return true;\n  const s = q.toLowerCase();\n  const haystack: string[] = [\n    listing.title,\n    listing.description,\n    listing.location,\n  ];\n  if (isVehicle(listing)) {\n    haystack.push(\n      listing.details.make,\n      listing.details.model,\n      String(listing.details.year),\n      listing.details.fuel,\n      listing.details.transmission,\n      listing.details.condition\n    );\n  }\n  if (isEstate(listing)) {\n    haystack.push(\n      listing.details.propertyType,\n      String(listing.details.bedrooms),\n      String(listing.details.bathrooms),\n      String(listing.details.area)\n    );\n  }\n  return haystack.some((h) => h.toLowerCase().includes(s));\n}\n\nfunction sortListings(items: Listing[], sort: SortKey) {\n  const copy = [...items];\n  switch (sort) {\n    case 'price_asc':\n      return copy.sort((a, b) => a.price - b.price);\n    case 'price_desc':\n      return copy.sort((a, b) => b.price - a.price);\n    case 'recent':\n    default:\n      return copy.sort((a, b) => b.createdAt - a.createdAt);\n  }\n}\n\nexport default function App() {\n  const [category, setCategory] = useState<Category>('vehicles');\n  const [search, setSearch] = useState('');\n  const [minPrice, setMinPrice] = useState('');\n  const [maxPrice, setMaxPrice] = useState('');\n  const [sort, setSort] = useState<SortKey>('recent');\n  const [selected, setSelected] = useState<Listing | null>(null);\n\n  const clearFilters = () => {\n    setSearch('');\n    setMinPrice('');\n    setMaxPrice('');\n    setSort('recent');\n  };\n\n  const results = useMemo(() => {\n    const min = minPrice ? parseInt(minPrice, 10) : -Infinity;\n    const max = maxPrice ? parseInt(maxPrice, 10) : Infinity;\n\n    const filtered = LISTINGS.filter((l) => l.category === category)\n      .filter((l) => l.price >= min && l.price <= max)\n      .filter((l) => applySearch(l, search));\n\n    return sortListings(filtered, sort);\n  }, [category, search, minPrice, maxPrice, sort]);\n\n  const totalInCategory = useMemo(\n    () => LISTINGS.filter((l) => l.category === category).length,\n    [category]\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <header className=\"sticky top-0 z-40 border-b border-gray-200 bg-white/80 backdrop-blur\">\n        <div className=\"mx-auto flex max-w-7xl items-center justify-between px-4 py-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex h-9 w-9 items-center justify-center rounded-lg bg-indigo-600 text-white font-bold\">M</div>\n            <div>\n              <h1 className=\"text-lg font-semibold text-gray-900\">Auto & Estate Marketplace</h1>\n              <p className=\"text-xs text-gray-500\">Buy and sell vehicles and real estate</p>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"mx-auto max-w-7xl px-4 pb-16 pt-8\">\n        <div className=\"flex flex-col gap-6\">\n          <div className=\"flex items-center justify-between gap-4\">\n            <CategoryTabs selected={category} onChange={setCategory} />\n            <div className=\"text-sm text-gray-600\">\n              {results.length} of {totalInCategory} results\n            </div>\n          </div>\n\n          <Filters\n            search={search}\n            minPrice={minPrice}\n            maxPrice={maxPrice}\n            sort={sort}\n            onSearchChange={setSearch}\n            onMinPriceChange={setMinPrice}\n            onMaxPriceChange={setMaxPrice}\n            onSortChange={setSort}\n            onClear={clearFilters}\n          />\n\n          <ListingGrid items={results} onItemClick={setSelected} />\n        </div>\n      </main>\n\n      <DetailModal listing={selected} onClose={() => setSelected(null)} />\n    </div>\n  );\n}\n"
                }
            ]
        },
        {
            "type": "file",
            "name": "index.html",
            "language": "html",
            "path": "index.html",
            "code": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Marketplace - Vehicles & Real Estate</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>\n"
        }
    ]
}